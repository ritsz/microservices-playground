version: '3.7'

services:
  frontend-proxy:
    image: frontend-proxy:latest
    build:
      context: Dockerfiles
      dockerfile: Dockerfile-envoyproxy
    ports:
    - "8080:8080"
    - "8443:8443"
    - "9901:9901"
    depends_on:
    - fileservice
    - analysisservice
    environment:
    - ZIPKIN_URL=${NODE_2}
  
  fileservice:
    image: file-server:latest
    hostname: fileservice
    restart: always
    depends_on:
      - postgres
      # - nginx
      # - zipkin
    environment:
      - DATABASE_URL=postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - MINIO_URL=${NODE_2}
      - ZIPKIN_URL=${NODE_2}
    healthcheck:
      test: curl --fail http://localhost:8080/actuator/health || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s

  analysisservice:
    image: analysis-server:latest
    build:
      context: Dockerfiles
      dockerfile: Dockerfile-analysisservice
    hostname: analysisservice 
    depends_on:
      - kafka
      - connect
    environment:
      - MONGODB_URL=${NODE_2}
      - MONGODB_USER=root
      - MONGODB_PASS=example
  
  postgres:
    image: debezium/postgres:12
    hostname: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - /mnt/postgressdb:/var/lib/postgresql/data

  connect:
    image: debezium/connect:1.1
    hostname: connect
    ports:
     - 8083:8083
    links:
     - kafka
     - postgres
    depends_on:
     - kafka
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=sde_group
     - CONFIG_STORAGE_TOPIC=connect_storage_topic
     - OFFSET_STORAGE_TOPIC=connect_offset_topic
     - STATUS_STORAGE_TOPIC=connect_status_topic
  
  kafka:
    image: debezium/kafka:1.1
    hostname: kafka
    ports:
     - 9092:9092
    depends_on:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181

  zookeeper:
    image: debezium/zookeeper:1.1
    hostname: zookeeper
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  grafana_data: {}

