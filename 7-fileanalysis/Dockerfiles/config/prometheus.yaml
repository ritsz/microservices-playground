global:
  scrape_interval:     5s # Set the scrape interval to every 5 seconds. Default is every 1 minute.
  evaluation_interval: 5s # Evaluate rules every 5 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).


# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
    - targets:
      - 127.0.0.1:9090

  # These are the metrics from the frontend proxy. The proxy is envoy.
  # The prometheus metrics are available on port 9901
  - job_name: 'frontend-proxy'
    metrics_path: '/stats/prometheus'
    scrape_interval: 5s
    static_configs:
    - targets: ['frontend-proxy:9901']

  # These are the metrics from the fileservice. The service is springboot.
  # The prometheus metrics are available on port 8080/actuator/prometheus
  - job_name: 'fileservice'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
    - targets: ['fileservice:8080']

  # These are the metrics from the analysisservice. The service is Flask.
  # The prometheus metrics are available on port 9080/metrics
  - job_name: 'analysisservice'
    metrics_path: '/metrics'
    scrape_interval: 5s
    static_configs:
    - targets: ['analysisservice:9080']
