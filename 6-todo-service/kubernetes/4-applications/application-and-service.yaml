apiVersion: v1
kind: Service
metadata:
  name: frontend-proxy
  namespace: applications
spec:
  type: LoadBalancer
  selector:
    app: frontend-proxy-label
  ports:
    - name: load-balancer
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: https-load-balancer
      protocol: TCP
      port: 8443
      targetPort: 8443
    - name: admin
      protocol: TCP
      port: 9901
      targetPort: 9901
---

apiVersion: v1
kind: Service
metadata:
  name: users-service
  namespace: applications
spec:
  selector:
    app: users-service-label
  ports:
    - name: direct
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: sidecar-proxy
      protocol: TCP
      port: 8081
      targetPort: 8081
---

apiVersion: v1
kind: Service
metadata:
  name: tasks-service
  namespace: applications
spec:
  selector:
    app: tasks-service-label
  ports:
    - name: direct
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: sidecar-proxy
      protocol: TCP
      port: 8081
      targetPort: 8081
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-proxy-deployment
  namespace: applications
  labels:
    app: frontend-proxy-label
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-proxy-label
  template:
    metadata:
      labels:
        app: frontend-proxy-label
    spec:
      containers:
      - name: frontend-proxy
        image: envoyproxy/envoy:v1.21-latest
        ports:
        - containerPort: 8080
        - containerPort: 9901
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: envoy-config-all
          mountPath: "/etc/envoy"
        env:
        - name: SERVICE_NAME
          value: "frontend-proxy"
      volumes:
      - name: envoy-config-all
        projected:
          sources:
          - secret:
              name: envoy-selfsigned-cert-tls
              items:
              - key: tls.crt
                path: envoy-cert.pem
              - key: tls.key
                path: envoy-private.pem
          - configMap:
              name: envoy-config
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service-deployment
  namespace: applications
  labels:
    app: users-service-label
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-service-label
  template:
    metadata:
      labels:
        app: users-service-label
    spec:
      containers:
      - name: users-service
        image: gcr.io/applied-chalice-342017/users-service:latest
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
        env:
        - name: SERVICE_NAME
          value: "users-service"
      - name: users-service-sidecar
        image: envoyproxy/envoy:v1.21-latest
        ports:
        - containerPort: 8081
        - containerPort: 9901
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sidecar-config
          mountPath: "/etc/envoy"
      volumes:
      - name: sidecar-config
        configMap:
          name: sidecar-config
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-service-deployment
  namespace: applications
  labels:
    app: tasks-service-label
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasks-service-label
  template:
    metadata:
      labels:
        app: tasks-service-label
    spec:
      containers:
      - name: tasks-service
        image: gcr.io/applied-chalice-342017/tasks-service:latest
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
        env:
        - name: SERVICE_NAME
          value: "tasks-service"
      - name: tasks-service-sidecar
        image: envoyproxy/envoy:v1.21-latest
        ports:
        - containerPort: 8081
        - containerPort: 9901
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sidecar-config
          mountPath: "/etc/envoy"
      volumes:
      - name: sidecar-config
        configMap:
          name: sidecar-config