version: "3.7"

networks:
  servicemesh: {}

services:
  frontend-proxy:
    container_name: frontend-proxy
    image: frontend-proxy:latest
    build:
      context: services
      dockerfile: Dockerfile-envoyproxy
    networks:
    - servicemesh
    ports:
    - "8080:8080"
    - "8443:8443"
    - "9901:9901"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: frontend-proxy
    depends_on:
    - "users-service"
    - "tasks-service"

  users-service:
    container_name: users-service
    image: users-service:latest
    build:
      context: services/flask/users-service
      dockerfile: Dockerfile
    networks:
    - servicemesh
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: users-service
    depends_on:
    - "tasks-service"
    environment:
    - SERVICE_NAME='users-service'

  tasks-service:
    container_name: tasks-service
    image: tasks-service:latest
    build:
      context: services/flask/tasks-service
      dockerfile: Dockerfile
    networks:
    - servicemesh
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: tasks-service
    depends_on:
    - "fluentd"
    environment:
    - SERVICE_NAME='tasks-service'

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
    - servicemesh
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: mongodb
    ports:
    - 27017:27017
    depends_on:
    - "fluentd"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      PUID: 1000
      PGID: 1000

  fluentd:
    container_name: fluentd
    build:
      context: services
      dockerfile: Dockerfile-fluentd
    volumes:
    - ./output:/output 
    networks:
    - servicemesh
    ports:
    - "24224:24224"
    - "24224:24224/udp"
    logging:
      driver: "json-file"
      options:
        max-size: 100m
        max-file: "5"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.2.1
    volumes:
    - ./services/config/prometheus-config.yaml:/etc/prometheus/prometheus.yml
    networks:
    - servicemesh
    ports:
    - "9090:9090"
    depends_on:
    - "frontend-proxy"

  grafana:
    image: grafana/grafana:5.1.0
    container_name: grafana
    volumes:
    - ./services/config/grafana/config.ini:/etc/grafana/grafana.ini
    - ./services/config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/default.yaml
    - ./services/config/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/default.yaml
    - ./services/config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
    - servicemesh
    ports:
    - 3000:3000
    depends_on:
    - prometheus

  # elasticsearch: # port 9200
  #   image: elasticsearch:5.3.0
  #   container_name: elasticsearch
  #   networks:
  #   - servicemesh
  #   environment:
  #   - node.name=elasticsearch
  #   - cluster.initial_master_nodes=elasticsearch
  #   - bootstrap.memory_lock=true
  #   - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #
  # kibana:
  #   image: kibana:5.3.0
  #   container_name: kibana
  #   networks:
  #   - servicemesh
  #   ports:
  #   - "5601:5601"
  #   environment:
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200