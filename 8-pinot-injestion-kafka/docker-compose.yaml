version: '3.7'

services:
  zookeeper:
    image: 'zookeeper:3.7.0'
    container_name: zookeeper
    networks:
      - pinot-demo
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
  
  kafka:
    image: 'bitnami/kafka:3'
    container_name: kafka
    networks:
      - pinot-demo
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS="github-events:1:1"
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://10.192.195.90:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  pinot-controller:
    image: apachepinot/pinot:latest
    command: "StartController -zkAddress zookeeper:2181"
    container_name: pinot-controller
    restart: unless-stopped
    networks:
      - pinot-demo
    ports:
      - "9000:9000"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms1G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xloggc:gc-pinot-controller.log"
      PINOT_CONTROLLER_METRICS_PREFIX: "pinot.controller"
      PINOT_CONTROLLER_DATA_SOURCES_ZK_METADATA: "/pinot/kafka"
      PINOT_CONTROLLER_DATA_SOURCES_KAFKA_BROKER_LIST: "kafka:9092"
      PINOT_CONTROLLER_DATA_SOURCES_KAFKA_TOPIC_NAME: "github-events"
    depends_on:
      - zookeeper
  
  pinot-broker:
    image: apachepinot/pinot:latest
    command: "StartBroker -zkAddress zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-broker"
    networks:
      - pinot-demo
    ports:
      - "8099:8099"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms4G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xloggc:gc-pinot-broker.log"
    depends_on:
      - pinot-controller
  
  pinot-server:
    image: apachepinot/pinot:latest
    command: "StartServer -zkAddress zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-server"
    networks:
      - pinot-demo
    ports:
      - "8098:8098"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms4G -Xmx16G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xloggc:gc-pinot-server.log"
    depends_on:
      - pinot-broker

  kafka-producer:
    build:
      context: kafka-producer
      dockerfile: Dockerfile
    container_name: kafka-producer
    networks:
      - pinot-demo
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPOS="apache/kafka,apache/pinot,kubernetes/kubernetes"
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=github-events
    depends_on:
      - kafka

volumes:
  data:

networks:
  pinot-demo:
    driver: bridge
